{"version":3,"sources":["localization.js"],"names":["updateContent","document","querySelectorAll","forEach","element","locator","dataset","i18n","innerHTML","i18next","t","changeLng","lng","console","log","changeLanguage","use","i18nextHttpBackend","i18nextBrowserLanguageDetector","init","fallbackLng","debug","ns","defaultNS","backend","loadPath","then","err","on","languageSelector","querySelector","addEventListener","value"],"mappings":"AAAA,aAqBA,SAASA,gBAEIC,SAASC,iBAAiB,eAChCC,SAAQ,SAACC,GAGZ,IAAMC,EAAUD,EAAQE,QAAQC,KAEhCH,EAAQI,UAAYC,QAAQC,EAAEL,MAIlC,SAASM,UAAUC,GACjBC,QAAQC,IAAI,uBAAwBF,GACpCH,QAAQM,eAAeH,GAnCzBH,QACGO,IAAIC,oBACJD,IAAIE,gCACJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,GAAI,cACJC,UAAW,cACXC,QAAS,CACPC,SAAU,6CAGbC,MAAK,SAAUC,EAAKjB,GAEnBV,gBACAS,QAAQmB,GAAG,mBAAmB,WAC5B5B,sBAsBN,IAAM6B,iBAAmB5B,SAAS6B,cAAc,aAChDjB,QAAQC,IAAIe,kBAEZA,iBAAiBE,iBAAiB,UAAU,WAC1CpB,UAAUkB,iBAAiBG","file":"localization.js","sourcesContent":["i18next\r\n  .use(i18nextHttpBackend)\r\n  .use(i18nextBrowserLanguageDetector)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: true,\r\n    ns: \"backend-app\",\r\n    defaultNS: \"backend-app\",\r\n    backend: {\r\n      loadPath: \"../assets/localizedContent/{{lng}}.json\",\r\n    },\r\n  })\r\n  .then(function (err, t) {\r\n    // init set content\r\n    updateContent();\r\n    i18next.on(\"languageChanged\", () => {\r\n      updateContent();\r\n    });\r\n  });\r\n\r\n// just set some content and react to language changes\r\nfunction updateContent() {\r\n  // get all dom elements with data-i18n attribute\r\n  let docs = document.querySelectorAll(\"[data-i18n]\");\r\n  docs.forEach((element) => {\r\n    // console.log(element);\r\n    // get element id\r\n    const locator = element.dataset.i18n;\r\n    // translate the value\r\n    element.innerHTML = i18next.t(locator);\r\n  });\r\n}\r\n\r\nfunction changeLng(lng) {\r\n  console.log(\"Changing language to\", lng);\r\n  i18next.changeLanguage(lng);\r\n}\r\n\r\nconst languageSelector = document.querySelector(\"#language\");\r\nconsole.log(languageSelector);\r\n\r\nlanguageSelector.addEventListener(\"change\", () => {\r\n  changeLng(languageSelector.value);\r\n});\r\n"]}